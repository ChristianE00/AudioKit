(()=>{var e={626:e=>{async function a(e){console.log("[SERVICE-WORKER] Lowshelf function called")}async function t(e,a){let t=await chrome.storage.local.get("levels"),o=null;null==t.levels?o={[e]:a}:(o=t.levels,o[e]=a),await chrome.storage.local.set({levels:o})}async function o(e){let a=(await chrome.storage.local.get("levels")).levels;return null!=a&&null!=a[e]&&(console.log("tablevels: "+a),!0)}async function s(e){let a=(await chrome.storage.local.get("levels")).levels;return!await o(e)||a[e]<0?(console.log("!!Level not found for tabId: ",e),100):(console.log("!!Level found for tabId: ",e),100*a[e])}async function l(){let[e]=await chrome.tabs.query({active:!0,currentWindow:!0});return e}e.exports={worker:function(e,a){return e+a},sum:function(e,a){return e+a},getTabLevel:s,containsTab:o,getCurrentTab:l},chrome.runtime.onStartup.addListener((function(){console.log("Browser opened CLEARING CACHE"),chrome.storage.local.clear()})),new Map,chrome.runtime.onMessage.addListener((async e=>{switch(console.log("Message received from popup"),e.type){case"popup-loaded":let c=await l();var r=await s(c.id);console.log("[SERVICE-WORKER] Popup loaded message received sending level: ",r),chrome.runtime.sendMessage({type:"popup-level",level:r});break;case"adjust-level":console.log("[SERVICE-WORKER] Adjust level message received");var n=await l();await async function(e,a){await async function(){await chrome.offscreen.hasDocument()?console.log("Offscreen document already exists"):(console.log("Creating offscreen document"),await chrome.offscreen.createDocument({url:"offscreen.html",reasons:["USER_MEDIA"],justification:"Adjust tab audio volume"}),console.log("Created offscreen document"))}();let s=e.toString(),l=a.toString();if(await o(s))console.log("[WORKER] tab found in activeStreams W/ tabId: ",e),chrome.runtime.sendMessage({type:"adjust-level",target:"offscreen",tabId:e,level:a}),await t(s,l);else{console.log("[WORKER] tab not found in activeStreams W/ tabId: ",e);const o=await chrome.tabCapture.getMediaStreamId({targetTabId:e});chrome.runtime.sendMessage({type:"start-recording",target:"offscreen",data:o,tabId:e,level:a}),await t(s,l)}}(n.id,e.level);break;case"testSave":console.log("[SERVICE-WORKER] Test save message received"),n=await l(),await testSave(n.id);break;case"testGet":console.log("[SERVICE-WORKER] Test get message received"),n=await l(),await testGet(n.id);break;case"clear-storage":console.log("[SERVICE-WORKER] Clear storage message received"),await chrome.storage.local.clear();break;case"lowshelf-worker":console.log("[SERVICE-WORKER] Lowshelf message received"),await a(),await a(n.id)}}))}},a={};!function t(o){var s=a[o];if(void 0!==s)return s.exports;var l=a[o]={exports:{}};return e[o](l,l.exports,t),l.exports}(626)})();